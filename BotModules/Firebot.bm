# -*- Mode: perl; tab-width: 4; indent-tabs-mode: nil; -*-
################################
# Firebot Module               #
################################

package BotModules::Firebot;
use vars qw(@ISA);
@ISA = qw(BotModules);
1;

# RegisterConfig - Called when initialised, should call registerVariables
sub RegisterConfig {
    my $self = shift;
    $self->SUPER::RegisterConfig(@_);
    $self->registerVariables(
#        ['updateDelay', 1, 1, 120],
#        ['bugmessages', 0, 0, 0], # how many times we have reported bug changes
    );
}

#my $conn;
#my @cmdqueue = ();
#my %mailignore = ();


# Schedule - called when bot connects to a server, to install any schedulers
# use $self->schedule($event, $delay, $times, $data)
# where $times is 1 for a single event, -1 for recurring events,
# and a +ve number for an event that occurs that many times.
#sub Schedule {
#    my $self = shift;
#    my ($event) = @_;
#    $self->schedule($event, \$self->{'updateDelay'}, -1, 'bzbot');
#    $self->SUPER::Schedule($event);
#}

sub Help {
    my $self = shift;
    my ($event) = @_;
    my %commands = (
        '' => 'The firebot module contains random features specific to firebot.'
    );
    return \%commands;
}

sub Heard {
    my $self = shift;
    my ($event, $message) = @_;

    # evidently #firefox gets a lot of italian pirates, and should be the only
    # place we respond to calls for help.
    return 1 unless $event->{channel} eq '#firefox';

    $message = lc($message);

    if (grep { $message eq $_ } qw( !list !lista !search )) {
        $self->kick(
            $event,
            $event->{channel},
            $event->{from},
            "Please help localise Firefox! - http://www.mozillaitalia.it/home/come-iniziare/"
        );
    }

    elsif (grep { $message eq $_ } qw( help! "help!" !help help )) {
        if ($event->{time} - $self->{lasthelp} > 20) {
            $self->say(
                $event,
                $event->{from} . ": Welcome to #firefox! Just ask your question "
                    . "and someone should be with you shortly. If you don't get "
                    . "an answer after a while, you can try taking a look through "
                    . "the support site: https://support.mozilla.org/",
            );
            $self->{lasthelp} = $event->{time};
        }
    }

    return 0;
}

sub Told {
    my $self = shift;
    my ($event, $message) = @_;

    if (($message =~ /^admin/i)) {
		$self->say($event, "$event->{'from'}: My admin is glob, reachable at 'byron\@glob.uno'. Bugs about me go here: https://bugzilla.mozilla.org/enter_bug.cgi?product=Webtools&component=Mozbot");
    } elsif (($message =~ /(who|what) is.*$event->{nick}/i) || ($message =~ /(who|what) are you/i) || ($message =~ /^\s*firebot[?\s]*$/osi)) {
        $self->say($event, "$event->{'from'}: I'm $event->{nick}, I provide Bug Updates (and much more) for Firefox and the rest of the Mozilla world. :-) I'm maintained by glob and you can find out more about me here, https://wiki.mozilla.org/Firebot");
    } else {
        return $self->SUPER::Told(@_);
    }
    return 0; # dealt with it...
}

sub Scheduled {
    my $self = shift;
    my ($event, @data) = @_;
    if ($data[0] eq 'bzbot') {
        #$self->GetTrees($event, 0);
        #$self->CheckForBugs($event, 0);
    } else {
        $self->SUPER::Scheduled($event, @data);
    }
}

sub sayOrNotice {
    my $self = shift;
    if ($self->{'useNotice'}) {
        $self->notice(@_);
    } else {
        $self->say(@_);
    }
}


sub targettedSay {
    my $self = shift;
    my($event, $message, $direct) = @_;
    if ($direct and length($message)) {
        $self->say($event, "$event->{from}: $message");
    }
}
